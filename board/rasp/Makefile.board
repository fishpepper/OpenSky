# object files
DRIVER_SRCS   = 
HAL_SRCS      = hal_adc.c hal_cc25xx.c hal_io.c hal_sbus.c hal_soft_serial.c hal_soft_spi.c hal_spi.c hal_storage.c hal_timeout.c hal_uart.c hal_wdt.c hal_ppm.c
BOARD_SRCS    = $(STARTUP) $(DRIVER_SRCS) $(HAL_SRCS) $(GENERIC_SRCS)

# fetch this dir during include
SELF_DIR := $(dir $(lastword $(MAKEFILE_LIST)))

#name of executable
RESULT ?= opensky_$(notdir $(TARGET))

#faster build
MAKEFLAGS+="-j1 "

#opt
CFLAGS += -O1 -g

# include path
CFLAGS += -I$(SELF_DIR)

# Tool path, only override if not set
TOOLROOT ?= /usr/bin

# Tools
CC=gcc
LD=gcc
AR=ar
AS=as
OBJ=objcopy

# Code Paths
ARCH_DIR=arch/rasp
DEVICE=$(ARCH_DIR)/device
CORE  =$(ARCH_DIR)/core
LINK  =$(ARCH_DIR)/linker
PERIPH=$(ARCH_DIR)/peripheral_lib

# Search path for standard files
vpath %.c ./
vpath %.c $(ARCH_DIR)

# Search path for perpheral library
vpath %.c $(CORE)
vpath %.c $(PERIPH)/src
vpath %.c $(DEVICE)

# Processor specific
PTYPE = RASP

# Compilation Flags

FULLASSERT = -DUSE_FULL_ASSERT

CFLAGS+= -I$(DEVICE) -I$(CORE) -I$(PERIPH)/inc -I. -I$(ARCH_DIR)
CFLAGS+= -D$(PTYPE) -DUSE_STDPERIPH_DRIVER $(FULLASSERT) -DBUILD_TARGET=$(TARGET)


LINK_OBJS=$(BOARD_SRCS:%.c=%.o)

HEADER_FILES  = $(wildcard $(ARCH_DIR)/*.h)
HEADER_FILES += config.h 

# Build executable
board: $(RESULT)

$(RESULT): $(LINK_OBJS)
	exit
	@echo $(LINK_OBJS)
	@echo prereqs that are newer than test: $?
	$(LD) $(LDFLAGS) -o $@ $(LINK_OBJS) $(LDLIBS)


# pull in dependencies
# this includes all .d files produced along when building .o.
# On the first build there are not going to be any .d files.
# Hence, ignore include errors with -.
ALL_DEPS := $(patsubst %.c,%.d,$(BOARD_SRCS))
-include $(ALL_DEPS)

# compile and generate dependency info
%.o: %.c $(HEADER_FILES)
	$(CC) -c $(CFLAGS) $< -o $@
	$(CC) -MM -MP $(CFLAGS) $< > $@.d

%.o: %.s
	$(CC) -c $(CFLAGS) $(DEPFLAGS) $< -o $@

clean:
	rm -f *.o *.d

.PHONY: board clean flash debug
